<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- Spring配置文件，主要配置和业务逻辑有关的 -->
<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.qimiao">
		<!-- 配置不需要扫描的包 -->
		<context:exclude-filter type="annotation" 
				expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" 
				expression="org.springframework.web.bind.annotation.ControllerAdvice"/>		
	</context:component-scan>
	
	<!-- 数据源，事物控制，。。。 -->
	<context:property-placeholder location="classpath:properties/*.properties"/>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
 		<property name="user" value="${jdbc.user}"></property>
 		<property name="password" value="${jdbc.password}"></property>
 		<property name="driverClass" value="${jdbc.driverClass}"></property>
 		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
 	</bean>    						
	
	<!-- 配置和Mybatis的整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 指定mybatis,mapper文件的配置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<!-- 配置扫描器，将mybatis接口的实现加入到IOC容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有DAO接口的实现，加入到IOC容器中 -->
		<property name="basePackage" value="com.qimiao.dao"></property>
	</bean>
	
	<!-- 配置一个可以执行批量的sqlSession -->
	<!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean> -->
	
<!-- ============================================================ -->
	
	<!-- 事物控制的配置 :Spring的事物管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事物，使用(声明式)XMl配置形式的事务 -->
	<aop:config>
		<!-- 切入点表达式  *返回值类型  .. 所有类所有方法(..参数) -->
		<aop:pointcut expression="execution(* com.qimiao.service.*.*(..) )" id="txPoint"/>
		<!-- 配置事物增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!-- 配置事物增强，事物如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事物方法 -->
			<tx:method name="*"/>
			<!-- 以get开始的所有方法 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- Spring配置文件的核心点：数据源、与Mybatis的整合、事物控制 -->
</beans>










